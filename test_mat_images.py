# -*- coding: utf-8 -*-"""Created on Fri Sep 23 20:02:48 2022@author: Ahmed"""import osimport numpy as npfrom sklearn.model_selection import train_test_splitimport tensorflow as tffrom scipy.io import loadmatimport matplotlib.pyplot as pltfrom PIL import Imagepath = os.path.join(os.getcwd(), r"label_list")data = loadmat(path)original_labels = list(data.items())[3][1][0]original_labels = [label[0] for label in original_labels]photo_index = 1path = os.path.join(os.getcwd(), r"dataset\annotations")all_files = os.listdir(path)test_label = os.path.join(os.getcwd(), r"dataset\annotations", all_files[photo_index])label_image = loadmat(test_label)["groundtruth"]plt.imshow(label_image)test_image = os.path.join(os.getcwd(), r"dataset\photos", all_files[photo_index].replace("mat", "jpg"))original_image = plt.imread(test_image)plt.imshow(original_image)# Make a predictionprocessed_image = np.array(Image.fromarray(original_image.astype(np.uint8)).resize((512,512))).astype('float32')processed_image = np.array(processed_image)/127.5 - 1.if processed_image.ndim == 3:    processed_image = np.expand_dims(processed_image, 0)model = tf.keras.models.load_model('saved_model/generator.h5')pred = model.predict(processed_image)pred = np.round((pred+1.0)*127.5).astype(int)plt.imshow(pred[0])# Show the backgroundlabel = 0masked_image = original_image.copy()masked_image[label_image!=label] = [0,0,0]plt.imshow(masked_image)# test_size = 0.2# val_size = 0.1# train_files, test_files = train_test_split(all_files, test_size=test_size+val_size)# test_files, val_files = train_test_split(test_files, test_size=val_size/(test_size+val_size))# print(len(train_files), len(test_files), len(val_files))